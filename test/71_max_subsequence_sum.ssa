; ModuleID = 'sysyc'
source_filename = "./71_max_subsequence_sum.sy"
target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"

declare i64 @getint()

declare i64 @getch()

declare void @putint(i64)

declare void @putch(i64)

declare i64 @getarray(i64*)

declare i64 @putarray(i64, i64*)

define i64 @maxSubArray(i64* %0, i64 %1) {
entry:
  %2 = icmp eq i64 %1, 0
  %3 = zext i1 %2 to i64
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %entry
  ret i64 0

6:                                                ; preds = %entry
  %7 = icmp eq i64 %1, 1
  %8 = zext i1 %7 to i64
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %6
  %11 = getelementptr i64, i64* %0, i64 0
  %12 = load i64, i64* %11
  ret i64 %12

13:                                               ; preds = %6
  %14 = getelementptr i64, i64* %0, i64 0
  %15 = load i64, i64* %14
  store i64 %15, i64* undef
  %16 = load i64, i64* undef
  store i64 %16, i64* undef
  store i64 1, i64* undef
  br label %17

17:                                               ; preds = %43, %13
  %18 = load i64, i64* undef
  %19 = icmp slt i64 %18, %1
  %20 = zext i1 %19 to i64
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = load i64, i64* undef
  %24 = icmp slt i64 %23, 0
  %25 = zext i1 %24 to i64
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %29, label %30

27:                                               ; preds = %17
  %28 = load i64, i64* undef
  ret i64 %28

29:                                               ; preds = %22
  store i64 0, i64* undef
  br label %30

30:                                               ; preds = %29, %22
  %31 = load i64, i64* undef
  %32 = load i64, i64* undef
  %33 = getelementptr i64, i64* %0, i64 %32
  %34 = load i64, i64* %33
  %35 = add i64 %31, %34
  store i64 %35, i64* undef
  %36 = load i64, i64* undef
  %37 = load i64, i64* undef
  %38 = icmp slt i64 %36, %37
  %39 = zext i1 %38 to i64
  %40 = icmp ne i64 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %30
  %42 = load i64, i64* undef
  store i64 %42, i64* undef
  br label %43

43:                                               ; preds = %41, %30
  %44 = load i64, i64* undef
  %45 = add i64 %44, 1
  store i64 %45, i64* undef
  br label %17
}

define i64 @main() {
entry:
  ret i64 <badref>
}

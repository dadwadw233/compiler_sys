; ModuleID = 'sysyc'
source_filename = "./31_while_if_test2.sy"
target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"

declare i64 @getint()

declare i64 @getch()

declare void @putint(i64)

declare void @putch(i64)

declare i64 @getarray(i64*)

declare i64 @putarray(i64, i64*)

define i64 @ifWhile() {
entry:
  store i64 0, i64* undef
  store i64 3, i64* undef
  %0 = load i64, i64* undef
  %1 = icmp eq i64 %0, 5
  %2 = zext i1 %1 to i64
  %3 = icmp ne i64 %2, 0
  br i1 %3, label %4, label %5

4:                                                ; preds = %entry
  br label %8

5:                                                ; preds = %entry
  br label %19

6:                                                ; preds = %29, %16
  %7 = load i64, i64* undef
  ret i64 %7

8:                                                ; preds = %13, %4
  %9 = load i64, i64* undef
  %10 = icmp eq i64 %9, 2
  %11 = zext i1 %10 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = load i64, i64* undef
  %15 = add i64 %14, 2
  store i64 %15, i64* undef
  br label %8

16:                                               ; preds = %8
  %17 = load i64, i64* undef
  %18 = add i64 %17, 25
  store i64 %18, i64* undef
  br label %6

19:                                               ; preds = %24, %5
  %20 = load i64, i64* undef
  %21 = icmp slt i64 %20, 5
  %22 = zext i1 %21 to i64
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = load i64, i64* undef
  %26 = mul i64 %25, 2
  store i64 %26, i64* undef
  %27 = load i64, i64* undef
  %28 = add i64 %27, 1
  store i64 %28, i64* undef
  br label %19

29:                                               ; preds = %19
  br label %6
}

define i64 @main() {
entry:
  %0 = call i64 @ifWhile()
  ret i64 %0
}

; ModuleID = 'sysyc'
source_filename = "./80_lcm.sy"
target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"

@0 = global i64 zeroinitializer

declare i64 @getint()

declare i64 @getch()

declare void @putint(i64)

declare void @putch(i64)

declare i64 @getarray(i64*)

declare i64 @putarray(i64, i64*)

define i64 @gcd(i64 %0, i64 %1) {
entry:
  store i64 %0, i64* undef
  store i64 %1, i64* undef
  %2 = load i64, i64* undef
  %3 = load i64, i64* undef
  %4 = load i64, i64* undef
  %5 = load i64, i64* undef
  %6 = icmp slt i64 %4, %5
  %7 = zext i1 %6 to i64
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %entry
  %10 = load i64, i64* undef
  %11 = load i64, i64* undef
  store i64 %11, i64* undef
  store i64 %10, i64* undef
  br label %12

12:                                               ; preds = %9, %entry
  %13 = load i64, i64* undef
  %14 = load i64, i64* undef
  %15 = srem i64 %13, %14
  store i64 %15, i64* undef
  br label %16

16:                                               ; preds = %21, %12
  %17 = load i64, i64* undef
  %18 = icmp ne i64 %17, 0
  %19 = zext i1 %18 to i64
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %27

21:                                               ; preds = %16
  %22 = load i64, i64* undef
  store i64 %22, i64* undef
  %23 = load i64, i64* undef
  store i64 %23, i64* undef
  %24 = load i64, i64* undef
  %25 = load i64, i64* undef
  %26 = srem i64 %24, %25
  store i64 %26, i64* undef
  br label %16

27:                                               ; preds = %16
  %28 = mul i64 %2, %3
  %29 = load i64, i64* undef
  %30 = sdiv i64 %28, %29
  ret i64 %30
}

define i64 @main() {
entry:
  %0 = call i64 @getint()
  %1 = call i64 @getint()
  %2 = call i64 @gcd(i64 %0, i64 %1)
  ret i64 %2
}

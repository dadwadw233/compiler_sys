; ModuleID = 'sysyc'
source_filename = "./30_while_if_test1.sy"
target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"

declare i64 @getint()

declare i64 @getch()

declare void @putint(i64)

declare void @putch(i64)

declare i64 @getarray(i64*)

declare i64 @putarray(i64, i64*)

define i64 @whileIf() {
entry:
  store i64 0, i64* undef
  store i64 0, i64* undef
  br label %0

0:                                                ; preds = %18, %entry
  %1 = load i64, i64* undef
  %2 = icmp slt i64 %1, 100
  %3 = zext i1 %2 to i64
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %10

5:                                                ; preds = %0
  %6 = load i64, i64* undef
  %7 = icmp eq i64 %6, 5
  %8 = zext i1 %7 to i64
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %12, label %13

10:                                               ; preds = %0
  %11 = load i64, i64* undef
  ret i64 %11

12:                                               ; preds = %5
  store i64 25, i64* undef
  br label %18

13:                                               ; preds = %5
  %14 = load i64, i64* undef
  %15 = icmp eq i64 %14, 10
  %16 = zext i1 %15 to i64
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %21, label %22

18:                                               ; preds = %25, %12
  %19 = load i64, i64* undef
  %20 = add i64 %19, 1
  store i64 %20, i64* undef
  br label %0

21:                                               ; preds = %13
  store i64 42, i64* undef
  br label %25

22:                                               ; preds = %13
  %23 = load i64, i64* undef
  %24 = mul i64 %23, 2
  store i64 %24, i64* undef
  br label %25

25:                                               ; preds = %22, %21
  br label %18
}

define i64 @main() {
entry:
  %0 = call i64 @whileIf()
  ret i64 %0
}

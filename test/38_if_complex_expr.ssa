; ModuleID = 'sysyc'
source_filename = "./38_if_complex_expr.sy"
target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"

declare i64 @getint()

declare i64 @getch()

declare void @putint(i64)

declare void @putch(i64)

declare i64 @getarray(i64*)

declare i64 @putarray(i64, i64*)

define i64 @main() {
entry:
  %0 = mul i64 -2, 1
  %1 = sdiv i64 %0, 2
  %2 = icmp slt i64 %1, 0
  %3 = zext i1 %2 to i64
  %4 = icmp ne i64 %3, 0
  %5 = sub i64 5, 5
  %6 = icmp ne i64 %5, 0
  %7 = zext i1 %6 to i64
  %8 = icmp ne i64 %7, 0
  %9 = add i64 1, 3
  %10 = srem i64 %9, 2
  %11 = icmp ne i64 %10, 0
  %12 = zext i1 %11 to i64
  %13 = icmp ne i64 %12, 0
  %14 = and i1 %8, %13
  %15 = or i1 %4, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %entry
  call void @putint(i64 2)
  br label %17

17:                                               ; preds = %16, %entry
  %18 = srem i64 -2, 2
  %19 = add i64 %18, 67
  %20 = icmp slt i64 %19, 0
  %21 = zext i1 %20 to i64
  %22 = icmp ne i64 %21, 0
  %23 = sub i64 5, 5
  %24 = icmp ne i64 %23, 0
  %25 = zext i1 %24 to i64
  %26 = icmp ne i64 %25, 0
  %27 = add i64 1, 2
  %28 = srem i64 %27, 2
  %29 = icmp ne i64 %28, 0
  %30 = zext i1 %29 to i64
  %31 = icmp ne i64 %30, 0
  %32 = and i1 %26, %31
  %33 = or i1 %22, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %17
  call void @putint(i64 4)
  br label %35

35:                                               ; preds = %34, %17
  ret i64 0
}

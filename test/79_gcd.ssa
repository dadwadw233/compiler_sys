; ModuleID = 'sysyc'
source_filename = "./79_gcd.sy"
target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"

@0 = global i64 zeroinitializer

declare i64 @getint()

declare i64 @getch()

declare void @putint(i64)

declare void @putch(i64)

declare i64 @getarray(i64*)

declare i64 @putarray(i64, i64*)

define i64 @gcd(i64 %0, i64 %1) {
entry:
  store i64 %0, i64* undef
  store i64 %1, i64* undef
  %2 = load i64, i64* undef
  %3 = load i64, i64* undef
  %4 = icmp slt i64 %2, %3
  %5 = zext i1 %4 to i64
  %6 = icmp ne i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %entry
  %8 = load i64, i64* undef
  %9 = load i64, i64* undef
  store i64 %9, i64* undef
  store i64 %8, i64* undef
  br label %10

10:                                               ; preds = %7, %entry
  %11 = load i64, i64* undef
  %12 = load i64, i64* undef
  %13 = srem i64 %11, %12
  store i64 %13, i64* undef
  br label %14

14:                                               ; preds = %19, %10
  %15 = load i64, i64* undef
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %14
  %20 = load i64, i64* undef
  store i64 %20, i64* undef
  %21 = load i64, i64* undef
  store i64 %21, i64* undef
  %22 = load i64, i64* undef
  %23 = load i64, i64* undef
  %24 = srem i64 %22, %23
  store i64 %24, i64* undef
  br label %14

25:                                               ; preds = %14
  %26 = load i64, i64* undef
  ret i64 %26
}

define i64 @main() {
entry:
  %0 = call i64 @getint()
  %1 = call i64 @getint()
  %2 = call i64 @gcd(i64 %0, i64 %1)
  ret i64 %2
}

; ModuleID = 'sysyc'
source_filename = "./32_while_if_test3.sy"
target datalayout = "e-m:e-p:64:64-i64:64-i128:128-n64-S128"

declare i64 @getint()

declare i64 @getch()

declare void @putint(i64)

declare void @putch(i64)

declare i64 @getarray(i64*)

declare i64 @putarray(i64, i64*)

define i64 @deepWhileBr(i64 %0, i64 %1) {
entry:
  %2 = add i64 %0, %1
  store i64 %2, i64* undef
  br label %3

3:                                                ; preds = %22, %entry
  %4 = load i64, i64* undef
  %5 = icmp slt i64 %4, 75
  %6 = zext i1 %5 to i64
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  %9 = load i64, i64* undef
  %10 = icmp slt i64 %9, 100
  %11 = zext i1 %10 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %15, label %22

13:                                               ; preds = %3
  %14 = load i64, i64* undef
  ret i64 %14

15:                                               ; preds = %8
  %16 = load i64, i64* undef
  %17 = add i64 %16, 42
  store i64 %17, i64* undef
  %18 = load i64, i64* undef
  %19 = icmp sgt i64 %18, 99
  %20 = zext i1 %19 to i64
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %23, label %25

22:                                               ; preds = %25, %8
  br label %3

23:                                               ; preds = %15
  %24 = mul i64 42, 2
  br i1 true, label %26, label %28

25:                                               ; preds = %28, %15
  br label %22

26:                                               ; preds = %23
  %27 = mul i64 %24, 2
  store i64 %27, i64* undef
  br label %28

28:                                               ; preds = %26, %23
  br label %25
}

define i64 @main() {
entry:
  %0 = call i64 @deepWhileBr(i64 2, i64 2)
  ret i64 %0
}
